{"version":3,"sources":["components/ShowHide.js","components/Header.jsx","components/Checkmark.jsx","components/Todo.jsx","components/TodoList.jsx","components/Form.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["ShowHide","props","type","checked","show","onChange","e","toggleDone","Header","counter","className","defaultProps","Checkmark","done","toggleFn","Todo","title","deleteFn","onClick","TodoList","tasks","map","task","i","ev","Form","React","useState","value","setValue","onSubmit","preventDefault","addTaskFn","placeholder","target","URL","App","todos","setTodos","setShow","useEffect","a","fetch","response","json","data","console","log","error","getData","goToBackend","config","url","method","headers","body","JSON","stringify","handleClickDelete","undefined","el","find","id","ok","Error","t","index","findIndex","splice","handleClickToggleDone","addTask","alert","todo","concat","filtered","filter","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0e61a97.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst ShowHide = props => {\n    return (\n        <input\n            type=\"checkbox\"\n            checked={props.show}\n            onChange={e => props.toggleDone(!props.show)}\n        />\n    );\n};\n\nShowHide.propTypes = {\n    toggleDone: PropTypes.func.isRequired,\n    show: PropTypes.bool.isRequired,\n}\n\nexport default ShowHide;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/header.css';\nimport ShowHide from './ShowHide';\n\nconst Header = ({ counter , show, toggleDone }) => {\n    return (\n        <div className=\"card-header\">\n            <h1 className=\"card-header-title\">\n                Hay {counter} tareas\n            </h1>\n            <ShowHide\n                show={show}\n                toggleDone={toggleDone} \n            />\n        </div>\n    );\n};\n\nHeader.propTypes = {\n    counter: PropTypes.number.isRequired,\n    toggleDone: PropTypes.func.isRequired,\n    show: PropTypes.bool.isRequired\n}\nHeader.defaultProps = {\n    counter: 0\n}\n\nexport default Header;\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\nconst Checkmark = props => {\n    const { done, toggleFn }= props;\n    return (\n        <input\n            type=\"checkbox\"\n            checked={done}\n            onChange={toggleFn}\n        />\n    );\n};\n\nCheckmark.propTypes = {\n    done: PropTypes.bool,\n    toggleFn: PropTypes.func.isRequired\n}\n\nexport default Checkmark;","import React from 'react'\nimport PropTypes from 'prop-types';\nimport Checkmark from './Checkmark';\nimport '../css/todo.css';\n\n\nconst Todo =({ done, title, toggleFn, deleteFn }) => {\n    return (\n        <li className={`todo list-item`}>\n            <Checkmark \n                done={done}\n                toggleFn={toggleFn}\n            />\n            <p className={`${done ? 'done' : ''}`}>{title}</p>\n            <button \n                className=\"button is-small is-danger is-outlined\"\n                onClick={ e => deleteFn(e)}\n            >\n                Delete\n            </button>\n        </li>\n    );\n    \n};\n\n\nTodo.propTypes = {\n    done: PropTypes.bool.isRequired,\n    title: PropTypes.string.isRequired,\n    deleteFn: PropTypes.func.isRequired,\n    toggleFn: PropTypes.func.isRequired\n}\nexport default Todo;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\nimport '../css/todoList.css';\n\nconst TodoList = props => {\n    return (\n        <ul className=\"card-content list-wrapper\">\n            {\n                props.tasks.map((task,i) => \n                    <Todo \n                        key={i}\n                        done={task.done}\n                        title={task.title}\n                        toggleFn={ev => props.toggleFn(ev,task.title)}\n                        deleteFn={ev => props.deleteFn(ev,task.title)} \n                    />\n                )\n            }\n        </ul>\n    );\n};\n\nTodoList.propTypes = {\n    tasks: PropTypes.array,\n    deleteFn: PropTypes.func.isRequired,\n    toggleFn: PropTypes.func.isRequired\n}\nTodoList.defaultProps = {\n    tasks: []\n}\n\nexport default TodoList;","import React from 'react'\nimport PropTypes from 'prop-types';\nimport '../css/form.css';\n\nconst Form = props => {\n    const [value, setValue] = React.useState('');\n\n    const handleChange = (e) => {\n        setValue(e.target.value)\n    }\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(value !== '') {\n            props.addTaskFn(value)\n            setValue('');\n        }\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                className=\"input is-info\"\n                placeholder=\"Agrega una tarea\"\n                onChange={handleChange}\n                value={value}\n            />\n            <button \n                className=\"button is-info\"\n            >\n                Agregar\n            </button>\n        </form>\n    );\n};\n\nForm.propTypes = {\n    addTaskFn: PropTypes.func.isRequired\n}\n\nexport default Form;","import React from 'react';\nimport Header from './Header';\nimport TodoList from './TodoList';\nimport Form from './Form';\n\nconst URL = \"https://my-json-server.typicode.com/VictorLascares/todoList\";\n\nconst App = () => {\n  const [todos, setTodos] = React.useState([]);\n  const [show, setShow] = React.useState(true);\n\n  React.useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await fetch(`${URL}/todos`);\n        const data = await response.json();\n        console.log(data);\n        setTodos(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    getData();\n  }, []);\n\n  const goToBackend = (config, data) => {\n    return fetch(config.url, {\n      method: config.method,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: data ? JSON.stringify(data) : null\n    })\n  }\n\n  const handleClickDelete = async (e, title) => {\n    const el = todos.find(e => e.title === title)\n    \n    if (el === undefined) return\n\n    const config = {\n      url: `${URL}/todos/${el.id}`,\n      method: \"DELETE\"\n    }\n    try {\n      const response = await goToBackend(config);\n      if (!response.ok) throw new Error(\"Response not ok!\")\n\n      const t = [...todos];\n      const index = t.findIndex(e => e.id === el.id);\n      t.splice(index, 1);\n      setTodos(t);\n\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const handleClickToggleDone = async (e, title) => {\n    const el = todos.find(e => e.title === title)\n    if (el === undefined) return\n\n    const value = !el.done;\n    // Backend\n    const config = {\n      url: `${URL}/todos/${el.id}`,\n      method: \"PATCH\"\n    }\n    try {\n      const response = await goToBackend(config, {done: value})\n\n      if (!response.ok) throw new Error(\"Response not ok!\")\n      // UI\n      const t = [...todos];\n      const index = todos.findIndex(e => e.id === el.id)\n      t[index].done = !t[index].done;\n      setTodos(t);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const addTask = async title => {\n    const exist = todos.find(e => title === e.title);\n    if (exist) {\n      alert(`La tarea \"${title}\" ya existe!`);\n      return\n    }\n    // Cambio en el servidor\n    const config = {\n      url: `${URL}/todos`,\n      method: \"POST\"\n    }\n\n    const data = {\n      title: title,\n      done: false\n    }\n    try {\n      const response = await goToBackend (config,data);\n      if (!response.ok) throw new Error(\"Response not ok\");\n\n      const todo = await response.json();\n\n      // UI\n      setTodos(todos.concat([todo]));\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const filtered = todos.filter(e => !e.done || e.done === show)\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"card frame\">\n        <Header\n          counter={filtered.length}\n          show={show}\n          toggleDone={setShow}\n        />\n        <TodoList\n          tasks={filtered}\n          toggleFn={handleClickToggleDone}\n          deleteFn={handleClickDelete}\n        />\n        <Form\n          addTaskFn={addTask}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}